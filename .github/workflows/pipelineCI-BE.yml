name: CI Pipeline BE

on:
  push:
    branches:
      - 'main'
      - 'dev'
      - 'test'

jobs:
  # Job para OrdersService
  build-and-deploy-orders:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v3

      - name: Clone OrdersService Repo
        run: git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/FI-ORT-DevOps-305212-303898/DevOps-OrdersService.git

      - name: Build Docker Image for OrdersService
        run: |
          docker build -t fiortdevops/ordersservice:latest ./DevOps-OrdersService
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and Push OrdersService Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "orders-service"
          IMAGE_TAG: "latest"
        run: |
          docker tag fiortdevops/ordersservice:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
  # Job para PaymentsService
  build-and-deploy-payments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v3

      - name: Clone PaymentsService Repo
        run: git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/FI-ORT-DevOps-305212-303898/DevOps-PaymentsService.git

      - name: Build Docker Image for PaymentsService
        run: |
          docker build -t fiortdevops/paymentsservice:latest ./DevOps-PaymentsService

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and Push PaymentsService Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "payments-service"
          IMAGE_TAG: "latest"
        run: |
          docker tag fiortdevops/paymentsservice:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
  # Job para ProductsService
  build-and-deploy-products:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v3

      - name: Clone ProductsService Repo
        run: git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/FI-ORT-DevOps-305212-303898/DevOps-ProductsService.git


      - name: Build Docker Image for ProductsService
        run: |
          docker build -t fiortdevops/productsservice:latest ./DevOps-ProductsService
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and Push ProductsService Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "products-service"
          IMAGE_TAG: "latest"
        run: |
          docker tag fiortdevops/productsservice:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG    
          
  # Job para ShippingService
  build-and-deploy-shipping:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v3

      - name: Clone ShippingService Repo
        run: git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/FI-ORT-DevOps-305212-303898/DevOps-ShippingService.git

      - name: Build Docker Image for ShippingService
        run: |
          docker build -t fiortdevops/shippingservice:latest ./DevOps-ShippingService
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and Push ShippingService Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "shipping-service"
          IMAGE_TAG: "latest"
        run: |
          docker tag fiortdevops/shippingservice:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  
